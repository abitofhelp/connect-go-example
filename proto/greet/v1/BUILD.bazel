load("@rules_buf//buf:defs.bzl", "buf_lint_test")
load("@rules_go//proto:compiler.bzl", "go_proto_compiler")
load("@rules_go//proto:def.bzl", "go_proto_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

## bazel query --output label '@com_connectrpc_connect//...'
## @com_connectrpc_connect//cmd/protoc-gen-connect-go:protoc-gen-connect-go
go_proto_compiler(
    name = "connect_go_proto_compiler",
    options = [
        "lang=go",
        "connect-go_out=gen/",
        "connect-go_opt=paths=source_relative",
    ],
    plugin = "@com_connectrpc_connect//cmd/protoc-gen-connect-go:protoc-gen-connect-go",
    suffix = ".connect.go",
    valid_archive = False,
    visibility = ["//visibility:public"],
    deps = ["@com_connectrpc_connect//:go_default_library"],
)

proto_library(
    name = "greetv1_proto",
    srcs = ["greet.proto"],
    visibility = ["//visibility:public"],
)

buf_lint_test(
    name = "greet_proto_lint",
    config = "//:buf.yaml",
    targets = [":greetv1_proto"],
    visibility = ["//visibility:public"],
)

# Generate the greet.pb.go file.
go_proto_library(
    name = "greetv1_go_proto",
    compilers = [
        "@rules_go//proto:go_proto"
    ],
    importpath = "github.com/abitofhelp/connect-go-example/gen/greet/v1",
    proto = ":greetv1_proto",
    visibility = ["//visibility:public"],
)

# Generate the greet.connect.pb.go file, which imports greet.pb.go.
go_proto_library(
    name = "greetv1_connect_go_proto",
    compilers = [
        ":connect_go_proto_compiler",
    ],
    importpath = "github.com/abitofhelp/connect-go-example/gen/greet/v1/greetv1connect",
    proto = ":greetv1_proto",
    visibility = ["//visibility:public"],
    deps = [":greetv1_go_proto"],
)
